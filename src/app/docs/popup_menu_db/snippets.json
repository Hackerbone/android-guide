{
    "snippets": [
      {
        "codeblockTitle": "activity_main.xml - Main Layout",
        "code": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <EditText\n        android:id=\"@+id/editMovie\"\n        android:hint=\"Movie Name\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" />\n\n    <RatingBar\n        android:id=\"@+id/ratingBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:numStars=\"5\"\n        android:stepSize=\"0.5\" />\n\n    <Button\n        android:id=\"@+id/btnAdd\"\n        android:text=\"Insert\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" />\n\n    <Button\n        android:id=\"@+id/btnShow\"\n        android:text=\"Show All\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" />\n\n    <ListView\n        android:id=\"@+id/movieList\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\" />\n</LinearLayout>"
      },
      {
        "codeblockTitle": "activity_grid.xml - Grid Layout",
        "code": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <GridView\n        android:id=\"@+id/gridView\"\n        android:numColumns=\"2\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n</LinearLayout>"
      },
      {
        "codeblockTitle": "popup_menu.xml - Popup Menu Layout",
        "code": "<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:id=\"@+id/menu_update\" android:title=\"Update\" />\n    <item android:id=\"@+id/menu_delete\" android:title=\"Delete\" />\n</menu>"
      },
      {
        "codeblockTitle": "MainActivity.kt - Main Activity",
        "code": "package com.example.moviereview\n\nimport android.content.Intent\nimport android.os.Bundle\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.widget.*\nimport androidx.appcompat.app.AppCompatActivity\n\nclass MainActivity : AppCompatActivity() {\n    lateinit var db: DBHelper\n    lateinit var movieList: MutableList<String>\n    lateinit var adapter: ArrayAdapter<String>\n    lateinit var selectedItem: String\n    lateinit var listView: ListView\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        db = DBHelper(this)\n\n        val movieName = findViewById<EditText>(R.id.editMovie)\n        val ratingBar = findViewById<RatingBar>(R.id.ratingBar)\n        val btnAdd = findViewById<Button>(R.id.btnAdd)\n        val btnShow = findViewById<Button>(R.id.btnShow)\n        listView = findViewById(R.id.movieList)\n\n        movieList = db.getAllMovies()\n        adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, movieList)\n        listView.adapter = adapter\n\n        btnAdd.setOnClickListener {\n            val name = movieName.text.toString()\n            val rating = ratingBar.rating.toString()\n            if (name.isNotEmpty()) {\n                db.insertMovie(\"$name - $rating⭐\")\n                refreshList()\n                movieName.text.clear()\n                ratingBar.rating = 0f\n            } else {\n                Toast.makeText(this, \"Enter movie name\", Toast.LENGTH_SHORT).show()\n            }\n        }\n\n        btnShow.setOnClickListener {\n            startActivity(Intent(this, GridActivity::class.java))\n        }\n\n        listView.setOnItemClickListener { _, view, position, _ ->\n            selectedItem = movieList[position]\n            showPopup(view)\n        }\n    }\n\n    private fun showPopup(view: View) {\n        val popup = PopupMenu(this, view)\n        val inflater: MenuInflater = popup.menuInflater\n        inflater.inflate(R.menu.popup_menu, popup.menu)\n\n        popup.setOnMenuItemClickListener { item ->\n            when (item.itemId) {\n                R.id.menu_update -> {\n                    db.updateMovie(selectedItem, \"$selectedItem (Updated)\")\n                    refreshList()\n                    true\n                }\n                R.id.menu_delete -> {\n                    db.deleteMovie(selectedItem)\n                    refreshList()\n                    true\n                }\n                else -> false\n            }\n        }\n        popup.show()\n    }\n\n    private fun refreshList() {\n        movieList.clear()\n        movieList.addAll(db.getAllMovies())\n        adapter.notifyDataSetChanged()\n    }\n}"
      },
      {
        "codeblockTitle": "DBHelper.kt - Database Helper",
        "code": "package com.example.moviereview\n\nimport android.content.ContentValues\nimport android.content.Context\nimport android.database.sqlite.SQLiteDatabase\nimport android.database.sqlite.SQLiteOpenHelper\n\nclass DBHelper(context: Context) : SQLiteOpenHelper(context, \"MovieDB\", null, 1) {\n    override fun onCreate(db: SQLiteDatabase) {\n        db.execSQL(\"CREATE TABLE movies(name TEXT PRIMARY KEY)\")\n    }\n\n    override fun onUpgrade(db: SQLiteDatabase, oldVersion: Int, newVersion: Int) {\n        db.execSQL(\"DROP TABLE IF EXISTS movies\")\n        onCreate(db)\n    }\n\n    fun insertMovie(name: String) {\n        val db = writableDatabase\n        val cv = ContentValues().apply {\n            put(\"name\", name)\n        }\n        db.insert(\"movies\", null, cv)\n    }\n\n    fun getAllMovies(): MutableList<String> {\n        val list = mutableListOf<String>()\n        val db = readableDatabase\n        val cursor = db.rawQuery(\"SELECT * FROM movies\", null)\n        while (cursor.moveToNext()) {\n            list.add(cursor.getString(0))\n        }\n        cursor.close()\n        return list\n    }\n\n    fun updateMovie(old: String, new: String) {\n        val db = writableDatabase\n        val cv = ContentValues().apply {\n            put(\"name\", new)\n        }\n        db.update(\"movies\", cv, \"name=?\", arrayOf(old))\n    }\n\n    fun deleteMovie(name: String) {\n        val db = writableDatabase\n        db.delete(\"movies\", \"name=?\", arrayOf(name))\n    }\n}"
      },
      {
        "codeblockTitle": "GridActivity.kt - Grid View Activity",
        "code": "package com.example.moviereview\n\nimport android.os.Bundle\nimport android.widget.ArrayAdapter\nimport android.widget.GridView\nimport androidx.appcompat.app.AppCompatActivity\n\nclass GridActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_grid)\n\n        val grid = findViewById<GridView>(R.id.gridView)\n        val db = DBHelper(this)\n        val movies = db.getAllMovies()\n        val adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, movies)\n        grid.adapter = adapter\n    }\n}"
      }
    ]
}
