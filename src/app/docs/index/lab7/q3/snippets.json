{
  "snippets": [
    {
      "codeblockTitle": "MainActivity.java",
      "code": "\npackage com.example.myapplication;\n\nimport android.content.pm.ApplicationInfo;\nimport android.content.pm.PackageManager;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.widget.ListView;\n\nimport androidx.activity.EdgeToEdge;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.graphics.Insets;\nimport androidx.core.view.ViewCompat;\nimport androidx.core.view.WindowInsetsCompat;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class MainActivity extends AppCompatActivity {\n    private ListView appListView;\n    private AppListAdapter adapter;\n    private List<AppInfo> appsList = new ArrayList<>();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        EdgeToEdge.enable(this);\n        setContentView(R.layout.activity_main);\n\n        // Handle system bars insets\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\n            return insets;\n        });\n\n        // Initialize ListView\n        appListView = findViewById(R.id.app_list_view);\n        loadInstalledApps();\n    }\n\n    private void loadInstalledApps() {\n        PackageManager pm = getPackageManager();\n        List<ApplicationInfo> packages = pm.getInstalledApplications(PackageManager.GET_META_DATA);\n\n        for (ApplicationInfo packageInfo : packages) {\n            // Skip system apps if needed\n            if ((packageInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {\n                continue;\n            }\n\n            String appName = packageInfo.loadLabel(pm).toString();\n            Drawable icon = packageInfo.loadIcon(pm);\n            boolean isSystemApp = (packageInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0;\n\n            // Get app version\n            String version;\n            try {\n                version = pm.getPackageInfo(packageInfo.packageName, 0).versionName;\n            } catch (PackageManager.NameNotFoundException e) {\n                version = \"Unknown\";\n            }\n\n            // Get app size\n            long size = new File(packageInfo.sourceDir).length();\n\n            AppInfo appInfo = new AppInfo(\n                    packageInfo.packageName,\n                    appName,\n                    icon,\n                    isSystemApp,\n                    version,\n                    size\n            );\n            appsList.add(appInfo);\n        }\n\n        // Sort apps alphabetically\n        appsList.sort((a1, a2) -> a1.getAppName().compareToIgnoreCase(a2.getAppName()));\n\n        // Set up adapter\n        adapter = new AppListAdapter(this, appsList);\n        appListView.setAdapter(adapter);\n    }\n}"
    },
    {
      "codeblockTitle": "PermissionsUtil.java",
      "code": "\npackage com.example.myapplication;\n\nimport android.content.Context;\nimport android.content.pm.PackageManager;\nimport android.util.Log;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PermissionUtils {\n    public static List<String> getAppPermissions(Context context, String packageName) {\n        List<String> permissions = new ArrayList<>();\n        try {\n            String[] requestedPermissions = context.getPackageManager()\n                    .getPackageInfo(packageName, PackageManager.GET_PERMISSIONS)\n                    .requestedPermissions;\n\n            if (requestedPermissions != null) {\n                for (String permission : requestedPermissions) {\n                    if (isSpecialPermission(permission)) {\n                        permissions.add(permission);\n                    }\n                }\n            }\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(\"PermissionUtils\", \"Error getting permissions\", e);\n        }\n        return permissions;\n    }\n\n    private static boolean isSpecialPermission(String permission) {\n        // List of special permissions to highlight\n        String[] specialPermissions = {\n                \"android.permission.ACCESS_FINE_LOCATION\",\n                \"android.permission.CAMERA\",\n                \"android.permission.RECORD_AUDIO\",\n                \"android.permission.READ_CONTACTS\",\n                \"android.permission.WRITE_EXTERNAL_STORAGE\"\n        };\n\n        for (String special : specialPermissions) {\n            if (permission.equals(special)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}"
    },
    {
      "codeblockTitle": "AppListAdapter.java",
      "code": "\npackage com.example.myapplication;\n\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport java.util.List;\n\npublic class AppListAdapter extends ArrayAdapter<AppInfo> {\n    private Context context;\n    private List<AppInfo> appsList;\n\n    public AppListAdapter(@NonNull Context context, List<AppInfo> appsList) {\n        super(context, R.layout.item_app_list, appsList);\n        this.context = context;\n        this.appsList = appsList;\n    }\n\n    @NonNull\n    @Override\n    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\n        if (convertView == null) {\n            convertView = LayoutInflater.from(context)\n                    .inflate(R.layout.item_app_list, parent, false);\n        }\n\n        AppInfo currentApp = appsList.get(position);\n\n        ImageView appIcon = convertView.findViewById(R.id.app_icon);\n        TextView appName = convertView.findViewById(R.id.app_name);\n\n        appIcon.setImageDrawable(currentApp.getIcon());\n        appName.setText(currentApp.getAppName());\n\n        convertView.setOnLongClickListener(v -> {\n            showAppOptionsDialog(currentApp);\n            return true;\n        });\n\n        return convertView;\n    }\n\n    private void showAppOptionsDialog(AppInfo appInfo) {\n        String[] options = {\n                \"App Type\",\n                \"Open App\",\n                \"Uninstall\",\n                \"View Details\"\n        };\n\n        new AlertDialog.Builder(context)\n                .setTitle(appInfo.getAppName())\n                .setItems(options, (dialog, which) -> {\n                    switch (which) {\n                        case 0: // App Type\n                            showAppTypeDialog(appInfo);\n                            break;\n                        case 1: // Open App\n                            openApp(appInfo.getPackageName());\n                            break;\n                        case 2: // Uninstall\n                            uninstallApp(appInfo.getPackageName());\n                            break;\n                        case 3: // View Details\n                            showAppDetails(appInfo);\n                            break;\n                    }\n                })\n                .show();\n    }\n\n    private void showAppTypeDialog(AppInfo appInfo) {\n        String type = appInfo.isSystemApp() ? \"System App\" : \"User-Installed App\";\n        new AlertDialog.Builder(context)\n                .setTitle(\"App Type\")\n                .setMessage(type)\n                .setPositiveButton(\"OK\", null)\n                .show();\n    }\n\n    private void openApp(String packageName) {\n        Intent launchIntent = context.getPackageManager()\n                .getLaunchIntentForPackage(packageName);\n        if (launchIntent != null) {\n            context.startActivity(launchIntent);\n        } else {\n            Toast.makeText(context, \"App cannot be launched\", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    private void uninstallApp(String packageName) {\n        new AlertDialog.Builder(context)\n                .setTitle(\"Uninstall App\")\n                .setMessage(\"Are you sure you want to uninstall this app?\")\n                .setPositiveButton(\"Uninstall\", (dialog, which) -> {\n                    Intent intent = new Intent(Intent.ACTION_DELETE);\n                    intent.setData(Uri.parse(\"package:\" + packageName));\n                    context.startActivity(intent);\n                })\n                .setNegativeButton(\"Cancel\", null)\n                .show();\n    }\n\n    private void showAppDetails(AppInfo appInfo) {\n        Intent intent = new Intent(context, AppDetailsActivity.class);\n        intent.putExtra(\"PACKAGE_NAME\", appInfo.getPackageName());\n        context.startActivity(intent);\n    }\n}"
    },
    {
      "codeblockTitle": "AppInfo.java",
      "code": "\npackage com.example.myapplication;\n\nimport android.graphics.drawable.Drawable;\n\npublic class AppInfo {\n    private String packageName;\n    private String appName;\n    private Drawable icon;\n    private boolean isSystemApp;\n    private String version;\n    private long size;\n\n    public AppInfo(String packageName, String appName, Drawable icon,\n                   boolean isSystemApp, String version, long size) {\n        this.packageName = packageName;\n        this.appName = appName;\n        this.icon = icon;\n        this.isSystemApp = isSystemApp;\n        this.version = version;\n        this.size = size;\n    }\n\n    // Getters and setters\n    public String getPackageName() { return packageName; }\n    public String getAppName() { return appName; }\n    public Drawable getIcon() { return icon; }\n    public boolean isSystemApp() { return isSystemApp; }\n    public String getVersion() { return version; }\n    public long getSize() { return size; }\n}"
    },
    {
      "codeblockTitle": "AppDetails.java",
      "code": "\npackage com.example.myapplication;\n\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager;\nimport android.os.Bundle;\nimport android.widget.TextView;\n\nimport androidx.activity.EdgeToEdge;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.graphics.Insets;\nimport androidx.core.view.ViewCompat;\nimport androidx.core.view.WindowInsetsCompat;\n\nimport java.io.File;\nimport java.util.List;\n\npublic class AppDetailsActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        EdgeToEdge.enable(this);\n        setContentView(R.layout.activity_app_details);\n\n        // Handle system bars insets\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.app_details_layout), (v, insets) -> {\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\n            return insets;\n        });\n\n        // Get package name from intent\n        String packageName = getIntent().getStringExtra(\"PACKAGE_NAME\");\n\n        // Populate details\n        displayAppDetails(packageName);\n    }\n\n    private void displayAppDetails(String packageName) {\n        PackageManager pm = getPackageManager();\n\n        try {\n            // Get package info\n            PackageInfo packageInfo = pm.getPackageInfo(packageName,\n                    PackageManager.GET_PERMISSIONS | PackageManager.GET_META_DATA);\n\n            // Find views\n            TextView nameView = findViewById(R.id.app_name_details);\n            TextView versionView = findViewById(R.id.app_version);\n            TextView sizeView = findViewById(R.id.app_size);\n            TextView permissionsView = findViewById(R.id.app_permissions);\n\n            // Set app name\n            nameView.setText(packageInfo.applicationInfo.loadLabel(pm));\n\n            // Set version\n            versionView.setText(\"Version: \" + packageInfo.versionName);\n\n            // Calculate and set app size\n            File apkFile = new File(packageInfo.applicationInfo.sourceDir);\n            long size = apkFile.length();\n            sizeView.setText(\"Size: \" + formatFileSize(size));\n\n            // Get and display permissions\n            List<String> specialPermissions = PermissionUtils.getAppPermissions(this, packageName);\n            if (!specialPermissions.isEmpty()) {\n                StringBuilder permissionText = new StringBuilder(\"Special Permissions:\n\");\n                for (String permission : specialPermissions) {\n                    permissionText.append(\"• \").append(formatPermissionName(permission)).append(\"\n\");\n                }\n                permissionsView.setText(permissionText.toString());\n            } else {\n                permissionsView.setText(\"No special permissions found.\");\n            }\n\n        } catch (PackageManager.NameNotFoundException e) {\n            // Handle error\n            TextView errorView = findViewById(R.id.app_name_details);\n            errorView.setText(\"App details could not be loaded.\");\n        }\n    }\n\n    private String formatFileSize(long size) {\n        if (size < 1024) return size + \" B\";\n        int exp = (int) (Math.log(size) / Math.log(1024));\n        char pre = \"KMGTPE\".charAt(exp-1);\n        return String.format(\"%.1f %sB\", size / Math.pow(1024, exp), pre);\n    }\n\n    private String formatPermissionName(String permission) {\n        // Remove standard prefix and format nicely\n        return permission.replace(\"android.permission.\", \"\")\n                .replace(\"_\", \" \")\n                .toLowerCase();\n    }\n}"
    },
    {
      "codeblockTitle": "activity_app_details.xml",
      "code": "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/app_details_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"16dp\"\n    tools:context=\".AppDetailsActivity\">\n\n    <TextView\n        android:id=\"@+id/app_name_details\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"24sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/>\n\n    <TextView\n        android:id=\"@+id/app_version\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:textSize=\"16sp\"\n        app:layout_constraintTop_toBottomOf=\"@id/app_name_details\"\n        app:layout_constraintStart_toStartOf=\"parent\"/>\n\n    <TextView\n        android:id=\"@+id/app_size\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:textSize=\"16sp\"\n        app:layout_constraintTop_toBottomOf=\"@id/app_version\"\n        app:layout_constraintStart_toStartOf=\"parent\"/>\n\n    <TextView\n        android:id=\"@+id/app_permissions\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:textSize=\"16sp\"\n        app:layout_constraintTop_toBottomOf=\"@id/app_size\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/>\n\n</androidx.constraintlayout.widget.ConstraintLayout>"
    },
    {
      "codeblockTitle": "item_app_list.xml",
      "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"horizontal\"\n    android:padding=\"16dp\"\n    android:gravity=\"center_vertical\">\n\n    <ImageView\n        android:id=\"@+id/app_icon\"\n        android:layout_width=\"50dp\"\n        android:layout_height=\"50dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:scaleType=\"fitCenter\"/>\n\n    <TextView\n        android:id=\"@+id/app_name\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"16sp\"\n        android:textStyle=\"bold\"/>\n\n</LinearLayout>"
    },
    {
      "codeblockTitle": "activity_main.xml",
      "code": "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/main\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <ListView\n        android:id=\"@+id/app_list_view\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0dp\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/>\n\n</androidx.constraintlayout.widget.ConstraintLayout>"
    }
  ]
}
